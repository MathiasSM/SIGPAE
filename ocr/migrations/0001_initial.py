# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-30 04:15
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import ocr.models
import ocr.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AutorReferencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=100, verbose_name='nombres')),
                ('apellidos', models.CharField(max_length=100, verbose_name='apellidos')),
            ],
            options={
                'verbose_name': 'autor',
                'verbose_name_plural': 'autores',
            },
        ),
        migrations.CreateModel(
            name='CampoAdicional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField(blank=True, help_text='La descripción del campo adicional', verbose_name='descripción')),
            ],
            options={
                'verbose_name': 'descripción de campo adicional',
            },
        ),
        migrations.CreateModel(
            name='Decanato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='El nombre completo del decanato o division', max_length=40, verbose_name='nombre')),
            ],
            options={
                'verbose_name': 'Decanato',
                'verbose_name_plural': 'Decanato',
            },
        ),
        migrations.CreateModel(
            name='Instancia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='El nombre completo de la unidad académica', max_length=40, verbose_name='nombre')),
                ('decanato', models.ManyToManyField(help_text='Decanato o Division a la que pertenece la Unidad', to='ocr.Decanato', verbose_name='Decanato o Division')),
            ],
            options={
                'verbose_name': 'instancia',
                'verbose_name_plural': 'instancias',
            },
        ),
        migrations.CreateModel(
            name='PDFAnonimo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(help_text='El PDF del programa a analizar', upload_to='tmp', validators=[ocr.validators.validate_pdf_ext_mime], verbose_name='pdf')),
                ('tipo', models.CharField(choices=[('T', 'Texto'), ('I', 'Imagen')], help_text='El tipo de PDF a analizar', max_length=1, verbose_name='tipo')),
                ('texto', models.TextField(blank=True, help_text='El texto extraído del PDF', verbose_name='texto extraído')),
            ],
        ),
        migrations.CreateModel(
            name='Programa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='El código de la materia', max_length=6, validators=[django.core.validators.RegexValidator(regex='^([A-Z0-9]){6}$')], verbose_name='código')),
                ('denominacion', models.CharField(blank=True, help_text='El nombre completo de la materia', max_length=100, null=True, verbose_name='nombre')),
                ('fecha_periodo', models.CharField(choices=[('1', 'ene-mar'), ('2', 'abr-jul'), ('3', 'intensivo'), ('4', 'sep-dic')], help_text='El trimestre cuando entra en vigencia el programa', max_length=1, verbose_name='trimestre')),
                ('fecha_año', models.PositiveSmallIntegerField(help_text='El año cuando entra en vigencia el programa', validators=[django.core.validators.MinValueValidator(1969)], verbose_name='año')),
                ('horas_teoria', models.PositiveSmallIntegerField(default=0, help_text='El número de horas de teoría semanales', verbose_name='horas de teoría')),
                ('horas_practica', models.PositiveSmallIntegerField(default=0, help_text='El número de horas de práctica semanales', verbose_name='horas de práctica')),
                ('horas_laboratorio', models.PositiveSmallIntegerField(default=0, help_text='El número de horas de laboratorio semanales', verbose_name='horas de laboratorio')),
                ('creditos', models.PositiveSmallIntegerField(blank=True, help_text='La cantidad de créditos que vale la materia', null=True, validators=[django.core.validators.MaxValueValidator(16)], verbose_name='créditos')),
                ('objetivos', models.TextField(blank=True, help_text='Los objetivos generales de la materia', null=True, verbose_name='objetivos generales')),
                ('objetivosE', models.TextField(blank=True, help_text='Los objetivos específicos de la materia', null=True, verbose_name='objetivos específicos')),
                ('contenidos_sinopticos', models.TextField(blank=True, help_text='Resumen del contenido de la materia', null=True, verbose_name='contenido sinóptico')),
                ('estrategias_metodologicas', models.TextField(blank=True, help_text='Las estratégias metodológicas de enseñanza utilizadas', null=True, verbose_name='estrategias metodológicas')),
                ('estrategias_evaluacion', models.TextField(blank=True, help_text='Las estrategias de evaluación utilizadas', null=True, verbose_name='estrategias de evaluación')),
                ('texto', models.TextField(blank=True, help_text='El texto extraído del PDF', verbose_name='texto extraído')),
                ('pdf', models.FileField(help_text='El PDF del programa a analizar', upload_to=ocr.models.Programa.determinar_lugar, verbose_name='pdf')),
                ('instancia', models.ForeignKey(help_text='Instancia responsable por la asignatura', on_delete=django.db.models.deletion.CASCADE, to='ocr.Instancia', verbose_name='instancia')),
            ],
            options={
                'verbose_name': 'programa',
            },
        ),
        migrations.CreateModel(
            name='Programa_Borrador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='El código de la materia', max_length=6, validators=[django.core.validators.RegexValidator(regex='^([A-Z0-9]){6}$')], verbose_name='código')),
                ('denominacion', models.CharField(blank=True, help_text='El nombre completo de la materia', max_length=100, null=True, verbose_name='nombre')),
                ('fecha_periodo', models.CharField(choices=[('1', 'ene-mar'), ('2', 'abr-jul'), ('3', 'intensivo'), ('4', 'sep-dic')], help_text='El trimestre cuando entra en vigencia el programa', max_length=1, verbose_name='trimestre')),
                ('fecha_año', models.PositiveSmallIntegerField(help_text='El año cuando entra en vigencia el programa', validators=[django.core.validators.MinValueValidator(1969)], verbose_name='año')),
                ('horas_teoria', models.PositiveSmallIntegerField(default=0, help_text='El número de horas de teoría semanales', verbose_name='horas de teoría')),
                ('horas_practica', models.PositiveSmallIntegerField(default=0, help_text='El número de horas de práctica semanales', verbose_name='horas de práctica')),
                ('horas_laboratorio', models.PositiveSmallIntegerField(default=0, help_text='El número de horas de laboratorio semanales', verbose_name='horas de laboratorio')),
                ('creditos', models.PositiveSmallIntegerField(blank=True, help_text='La cantidad de créditos que vale la materia', null=True, validators=[django.core.validators.MaxValueValidator(16)], verbose_name='créditos')),
                ('objetivos', models.TextField(blank=True, help_text='Los objetivos generales de la materia', null=True, verbose_name='objetivos generales')),
                ('objetivosE', models.TextField(blank=True, help_text='Los objetivos específicos de la materia', null=True, verbose_name='objetivos específicos')),
                ('contenidos_sinopticos', models.TextField(blank=True, help_text='Resumen del contenido de la materia', null=True, verbose_name='contenido sinóptico')),
                ('estrategias_metodologicas', models.TextField(blank=True, help_text='Las estratégias metodológicas de enseñanza utilizadas', null=True, verbose_name='estrategias metodológicas')),
                ('estrategias_evaluacion', models.TextField(blank=True, help_text='Las estrategias de evaluación utilizadas', null=True, verbose_name='estrategias de evaluación')),
                ('texto', models.TextField(blank=True, help_text='El texto extraído del PDF', verbose_name='texto extraído')),
                ('pdf', models.FileField(help_text='El PDF del programa a analizar', upload_to=ocr.models.Programa_Borrador.determinar_lugar, verbose_name='pdf')),
                ('published', models.BooleanField(help_text='Ya es un PA completo y no editable?', verbose_name='publicado')),
                ('instancia', models.ForeignKey(help_text='Instancia responsable por la asignatura', on_delete=django.db.models.deletion.CASCADE, to='ocr.Instancia', verbose_name='instancia')),
            ],
            options={
                'verbose_name': 'programa_borrador',
            },
        ),
        migrations.CreateModel(
            name='ReferenciaBibliografica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Titulo de la funte recomendada', max_length=100, verbose_name='titulo')),
                ('editorial', models.CharField(help_text='Editorial de la funte recomendada', max_length=100, verbose_name='editorial')),
                ('edicion', models.CharField(help_text='Edicion o año recomendado', max_length=100, verbose_name='edicion')),
                ('notas', models.CharField(help_text='Notas adicionales', max_length=1000, verbose_name='notas')),
            ],
            options={
                'verbose_name': 'referencia',
                'verbose_name_plural': 'referencias',
            },
        ),
        migrations.CreateModel(
            name='SeccionFuenteInformacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtitulo', models.CharField(help_text='subtítulo de la sección', max_length=100)),
                ('programa', models.ForeignKey(help_text='El programa asociado a la seccion', null=True, on_delete=django.db.models.deletion.CASCADE, to='ocr.Programa', verbose_name='programa')),
                ('programa_borrador', models.ForeignKey(help_text='El programa asociado a la seccion', null=True, on_delete=django.db.models.deletion.CASCADE, to='ocr.Programa_Borrador', verbose_name='programa')),
            ],
            options={
                'verbose_name': 'seccion',
                'verbose_name_plural': 'secciones',
            },
        ),
        migrations.CreateModel(
            name='TipoCampoAdicional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='El nombre completo del campo adicional', max_length=100, verbose_name='nombre')),
            ],
            options={
                'verbose_name': 'campo adicional',
            },
        ),
        migrations.AddField(
            model_name='referenciabibliografica',
            name='seccion',
            field=models.ForeignKey(help_text='Seccion a la que pertenece la referencia', on_delete=django.db.models.deletion.CASCADE, to='ocr.SeccionFuenteInformacion', verbose_name='seccion'),
        ),
        migrations.AddField(
            model_name='campoadicional',
            name='programa',
            field=models.ForeignKey(help_text='El programa asociado', null=True, on_delete=django.db.models.deletion.CASCADE, to='ocr.Programa', verbose_name='programa'),
        ),
        migrations.AddField(
            model_name='campoadicional',
            name='programa_borrador',
            field=models.ForeignKey(help_text='El programa asociado', null=True, on_delete=django.db.models.deletion.CASCADE, to='ocr.Programa_Borrador', verbose_name='programa'),
        ),
        migrations.AddField(
            model_name='campoadicional',
            name='tipo_campo_adicional',
            field=models.ForeignKey(help_text='tipo de campo adicional', null=True, on_delete=django.db.models.deletion.CASCADE, to='ocr.TipoCampoAdicional', verbose_name='campo adicional'),
        ),
        migrations.AddField(
            model_name='autorreferencia',
            name='referencia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ocr.ReferenciaBibliografica', verbose_name='referencia'),
        ),
        migrations.AlterUniqueTogether(
            name='programa_borrador',
            unique_together=set([('codigo', 'fecha_periodo', 'fecha_año')]),
        ),
        migrations.AlterUniqueTogether(
            name='programa',
            unique_together=set([('codigo', 'fecha_periodo', 'fecha_año')]),
        ),
    ]
